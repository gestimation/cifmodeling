% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cifplot.R
\name{cifplot}
\alias{cifplot}
\title{Generate a survival or cumulative incidence curve with marks that represent
censoring, competing risks and intermediate events}
\usage{
cifplot(
  formula,
  data = NULL,
  weights = NULL,
  subset.condition = NULL,
  na.action = na.omit,
  outcome.type = c("COMPETING-RISK", "SURVIVAL"),
  code.event1 = 1,
  code.event2 = 2,
  code.censoring = 0,
  code.events = NULL,
  error = NULL,
  conf.type = "arcsine-square root",
  conf.int = 0.95,
  type.y = NULL,
  printEachEvent = FALSE,
  label.x = "Time",
  label.y = NULL,
  label.strata = NULL,
  limits.x = NULL,
  limits.y = NULL,
  breaks.x = NULL,
  breaks.y = NULL,
  use_coord_cartesian = FALSE,
  addConfidenceInterval = TRUE,
  addRiskTable = TRUE,
  addEstimateTable = FALSE,
  addCensorMark = TRUE,
  shape.censor.mark = 3,
  size.censor.mark = 2,
  addCompetingRiskMark = FALSE,
  competing.risk.time = list(),
  shape.competing.risk.mark = 16,
  size.competing.risk.mark = 2,
  addIntercurrentEventMark = FALSE,
  intercurrent.event.time = list(),
  shape.intercurrent.event.mark = 1,
  size.intercurrent.event.mark = 2,
  addQuantileLine = FALSE,
  quantile = 0.5,
  style = "CLASSIC",
  font.family = "sans",
  font.size = 12,
  legend.position = "top",
  filename.ggsave = NULL,
  width.ggsave = 6,
  height.ggsave = 6,
  dpi.ggsave = 300,
  printEachVar = FALSE,
  rows.columns.panel = NULL,
  order.strata = NULL,
  ...
)
}
\arguments{
\item{formula}{A model formula or a survfit object.}

\item{data}{A data frame containing variables in \code{formula}.}

\item{weights}{Optional name of the weight variable in \code{data}. Weights must be nonnegative; strictly positive is recommended.}

\item{subset.condition}{Optional character expression to subset \code{data} before analysis.}

\item{na.action}{Function to handle missing values (default: \code{na.omit} in \pkg{stats}).}

\item{outcome.type}{Character string specifying the type of time-to-event outcome.
One of \code{"SURVIVAL"} (Kaplan–Meier type) or \code{"COMPETING-RISK"} (Aalen–Johansen type).
If \code{NULL} (default), the function automatically infers the outcome type
from the data: if the event variable has more than two unique levels,
\code{"COMPETING-RISK"} is assumed; otherwise, \code{"SURVIVAL"} is used.
You can also use abbreviations such as \code{"S"} or \code{"C"}.
Mixed or ambiguous inputs (e.g., \code{c("S", "C")}) trigger automatic
detection based on the event coding in \code{data}.}

\item{code.event1}{Integer code of the event of interest (default \code{1}).}

\item{code.event2}{Integer code of the competing event (default \code{2}).}

\item{code.censoring}{Integer code of censoring (default \code{0}).}

\item{code.events}{Optional numeric length-3 vector \code{c(event1, event2, censoring)}.
When supplied, it overrides \code{code.event1}, \code{code.event2}, and \code{code.censoring}
(primarily used when \code{printEachEvent = TRUE}).}

\item{error}{Character specifying variance type used internally. For \code{"SURVIVAL"} typically \code{"greenwood"}.
For \code{"COMPETING-RISK"} pass options supported by \code{calculateAalenDeltaSE()} (\code{"aalen"}, \code{"delta"}, \code{"none"}).}

\item{conf.type}{Character transformation for CI on the probability scale (default \code{"arcsine-square root"}).}

\item{conf.int}{numeric two-sided confidence level (default \code{0.95}).}

\item{type.y}{\code{NULL} (survival) or \code{"risk"} (display \code{1 - survival} i.e. CIF).}

\item{printEachEvent}{Logical. If \code{TRUE} and \code{outcome.type == "COMPETING-RISK"},
\code{cifplot()} internally calls \code{\link{cifpanel}} to display both event-specific
cumulative incidence curves side-by-side (event 1 and event 2). Defaults to \code{FALSE}.
Ignored for non-competing-risk outcomes.}

\item{label.x}{Character x-axis labels (default \code{"Time"}).}

\item{label.y}{Character y-axis labels (default internally set to \code{"Survival"} or \code{"Cumulative incidence"}).}

\item{label.strata}{Character vector of labels for strata. When \code{printEachVar = TRUE}, you may
also supply a named list \code{list(var = c("L1","L2", ...))}.}

\item{limits.x}{Numeric length-2 vectors for axis limits. If NULL it is internally set to \code{c(0,max(out_readSurv$t))}.}

\item{limits.y}{Numeric length-2 vectors for axis limits. If NULL it is internally set to \code{c(0,1)}.}

\item{breaks.x}{Numeric vectors for axis breaks (default \code{NULL}).}

\item{breaks.y}{Numeric vectors for axis breaks (default \code{NULL}).}

\item{use_coord_cartesian}{Logical specify use of coord_cartesian() (default \code{FALSE}).}

\item{addConfidenceInterval}{Logical add \code{add_confidence_interval()} to plot. It calls geom_ribbon() (default \code{TRUE}).}

\item{addRiskTable}{Logical add \code{add_risktable(risktable_stats="n.risk")} to plot (default \code{TRUE}).}

\item{addEstimateTable}{Logical add \code{add_risktable(risktable_stats="estimate (conf.low, conf.high)")} to plot (default \code{FALSE}).}

\item{addCensorMark}{Logical add \code{add_censor_mark()} to plot. It calls geom_point() (default \code{TRUE}).}

\item{shape.censor.mark}{Integer point shape for censor marks (default \code{3}).}

\item{size.censor.mark}{Numeric point size for censor marks (default \code{2}).}

\item{addCompetingRiskMark}{Logical add time marks to describe event2 specified by Event(), usually the competing events.
It calls geom_point() (default \code{TRUE}).}

\item{competing.risk.time}{Named list of numeric vectors (names must be mapped to strata labels).}

\item{shape.competing.risk.mark}{Integer point shape for competing-risk marks (default \code{16}).}

\item{size.competing.risk.mark}{Numeric point size for competing-risk marks (default \code{2}).}

\item{addIntercurrentEventMark}{Logical overlay user-specified time marks per strata calls geom_point() (default \code{TRUE}).}

\item{intercurrent.event.time}{Named list of numeric vectors (names must be mapped to strata labels).}

\item{shape.intercurrent.event.mark}{Integer point shape for intercurrent-event marks (default \code{1}).}

\item{size.intercurrent.event.mark}{Numeric point size for intercurrent-event marks (default \code{2}).}

\item{addQuantileLine}{Logical add \code{add_quantile()} to plot. It calls geom_segment() (default \code{TRUE}).}

\item{quantile}{Numeric specify quantile for \code{add_quantile()} (default \code{0.5}).}

\item{style}{Character plot theme controls (default \code{"CLASSIC"}).}

\item{font.family}{Character plot theme controls (e.g. "sans", "serif", and "mono". default \code{"sans"}).}

\item{font.size}{Integer plot theme controls (default \code{12}).}

\item{legend.position}{Character specify position of legend: \code{"top"}, \code{"right"}, \code{"bottom"}, \code{"left"}, or \code{"none"} (default \code{"top"}).}

\item{filename.ggsave}{Character save the \pkg{ggsurvfit} plot with the path and name specified.}

\item{width.ggsave}{Numeric specify width of the \pkg{ggsurvfit} plot.}

\item{height.ggsave}{Numeric specify height of the \pkg{ggsurvfit} plot.}

\item{dpi.ggsave}{Numeric specify dpi of the \pkg{ggsurvfit} plot.}

\item{printEachVar}{Logical. If \code{TRUE}, when multiple covariates are listed
on the right-hand side (e.g., \code{~ a + b + c}), the function produces
a panel of CIF plots, each stratified by one variable at a time.}

\item{rows.columns.panel}{Optional integer vector \code{c(nrow, ncol)} controlling
the panel layout. If \code{NULL}, an automatic layout is used.}

\item{order.strata}{Optional \code{list} to control the display order of strata levels
when \code{printEachVar = TRUE}. Supply as \code{list(var = c("L1","L2",...))}.
Levels not listed are dropped. Must be consistent with \code{label.strata}:
if \code{label.strata[[var]]} is a named character vector, names are matched to
levels; otherwise labels are matched by position and must have the same length as
the (possibly re-ordered) levels.}

\item{...}{Additional arguments forwarded to \code{cifpanel()} when \code{printEachEvent = TRUE}.}
}
\value{
A \code{ggplot} object. When \code{printEachVar = TRUE}, a \pkg{patchwork}
object is returned with an attribute \code{attr(x, "plots")} containing the
individual \code{ggplot} panels.
}
\description{
This function produces the Kaplan–Meier survival or Aalen–Johansen cumulative
incidence curve from a unified formula + data interface (\code{Event()} or \code{Surv()} on
the left-hand side). It auto-labels axes based on `\code{outcome.type} and \code{type.y}, can
add censoring/competing-risk/intercurrent-event marks, and returns a regular \code{ggplot}
object (compatible with \code{+} and \code{\%+\%}). You may also pass a survfit-compatible object directly.
}
\details{
This function calls an internal helper \code{call_ggsurvfit()} which adds confidence intervals,
risk table, censoring marks, and optional competing-risk and intercurrent-event marks.

When \code{printEachEvent = TRUE}, two panels are created with
\code{code.events = list(c(e1, e2, c), c(e2, e1, c))}, where
\code{code.events = c(e1, e2, c)} is the input coding for event1, event2, and censoring.
Common legend is collected by default (\code{legend.collect = TRUE}).
\subsection{Advanced control not required for typical use}{

The arguments below fine-tune internal estimation and figure appearance.
\strong{Most users do not need to change these defaults.}
}

\subsection{Standard error and confidence intervals}{\tabular{lll}{
   Argument \tab Description \tab Default \cr
   \code{error} \tab Standard error for KM: \code{"greenwood"}, \code{"tsiatis"}. For CIF: \code{"aalen"}, \code{"delta"}, \code{"none"}. \tab Automatically chosen \code{"greenwood"} or \code{"delta"} \cr
   \code{conf.type} \tab Transformation for confidence intervals: \code{"plain"}, \code{"log"}, \code{"log-log"}, \code{"arcsin"}, \code{"logit"}, or \code{"none"}. \tab \code{"arcsin"} \cr
   \code{conf.int} \tab Two-sided confidence intervals level. \tab \code{0.95} \cr
}

\subsection{Graphical layers}{\tabular{lll}{
   Argument \tab Description \tab Default \cr
   \code{addConfidenceInterval} \tab Add confidence interval ribbon. \tab \code{TRUE} \cr
   \code{addRiskTable} \tab Add numbers-at-risk table below the plot. \tab \code{TRUE} \cr
   \code{addEstimateTable} \tab Add estimates & CIs table. \tab \code{FALSE} \cr
   \code{addCensorMark} \tab Add censoring marks. \tab \code{TRUE} \cr
   \code{addCompetingRiskMark} \tab Add marks for event2 of "COMPETING-RISK" outcome. \tab \code{FALSE} \cr
   \code{addIntercurrentEventMark} \tab Add intercurrent event marks at user-specified times. \tab \code{FALSE} \cr
   \code{addQuantileLine} \tab Add quantile lines. \tab \code{FALSE} \cr
   \code{quantile} \tab Quantile for \code{addQuantileLine}. \tab \code{0.5} \cr
}

}

\subsection{Time for marks}{\tabular{lll}{
   Argument \tab Description \tab Default \cr
   \code{competing.risk.time} \tab \strong{Named list} of numeric vectors that contains times of competing risks. Names must match strata labels. Typically created internally. \tab \code{list()} \cr
   \code{intercurrent.event.time} \tab \strong{Named list} of numeric vectors that contains times of intercurrent events. Names must match strata labels. Typically created by \code{extract_time_to_event()}. \tab \code{list()} \cr
}

}

\subsection{Appearance of marks}{\tabular{lll}{
   Argument \tab Applies to \tab Default \cr
   \code{shape.censor.mark} \tab Censoring marks \tab \code{3} (cross) \cr
   \code{size.censor.mark} \tab Censoring marks \tab \code{2} \cr
   \code{shape.competing.risk.mark} \tab Competing-risk marks \tab \code{16} (filled circle) \cr
   \code{size.competing.risk.mark} \tab Competing-risk marks \tab \code{2} \cr
   \code{shape.intercurrent.event.mark} \tab Intercurrent marks \tab \code{1} (circle) \cr
   \code{size.intercurrent.event.mark} \tab Intercurrent marks \tab \code{2} \cr
}

}

\subsection{Axes and legend}{\tabular{lll}{
   Argument \tab Description \tab Default \cr
   \code{limits.x}, \code{limits.y} \tab Axis limits (\code{c(min, max)}). \tab Auto \cr
   \code{breaks.x}, \code{breaks.y} \tab Tick breaks for x and y axes. \tab Auto \cr
   \code{use_coord_cartesian} \tab For zooming use \code{coord_cartesian()}. \tab \code{FALSE} \cr
   \code{legend.position} \tab \code{"top"}, \code{"right"}, \code{"bottom"}, \code{"left"}, \code{"none"}. \tab \code{"top"} \cr
}

}

\subsection{Export (optional convenience)}{\tabular{lll}{
   Argument \tab Description \tab Default \cr
   \code{filename.ggsave} \tab If non-\code{NULL}, save the plot using \code{ggsave()}. \tab \code{NULL} \cr
   \code{width.ggsave} \tab Size passed to \code{ggsave()}. \tab \code{6} \cr
   \code{height.ggsave} \tab Size passed to \code{ggsave()}. \tab \code{6} \cr
   \code{dpi.ggsave} \tab DPI passed to \code{ggsave()}. \tab \code{300} \cr
}


\strong{Notes.}
\itemize{
\item For CIF displays, set \code{type.y = "risk"}. For survival scale, use \code{type.y = NULL} or \verb{= "surv"}.
\item Event coding can be controlled via \code{code.event1}, \code{code.event2}, \code{code.censoring}.
For ADaM-style data, use \code{code.event1 = 0}, \code{code.censoring = 1}.
\item Per-stratum time lists should have names identical to plotted strata labels.
}
}

}
}
\examples{
data(diabetes.complications)
cifplot(Event(t,epsilon) ~ fruitq,
        data = diabetes.complications,
        outcome.type="COMPETING-RISK",
        addRiskTable = FALSE,
        label.y='CIF of diabetic retinopathy',
        label.x='Years from registration')
}
\seealso{
\code{\link[=polyreg]{polyreg()}} for log-odds product modeling of CIFs; \code{\link[=cifcurve]{cifcurve()}} for KM/AJ estimators; \code{\link[=cifpanel]{cifpanel()}} for display of multiple CIFs; \link[ggsurvfit:ggsurvfit]{ggsurvfit::ggsurvfit}, \link[patchwork:patchwork-package]{patchwork::patchwork} and \link[modelsummary:modelsummary]{modelsummary::modelsummary} for display helpers.
}
